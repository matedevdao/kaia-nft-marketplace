{"version":3,"file":"my-items.js","sourceRoot":"","sources":["../../src/views/my-items.ts"],"names":[],"mappings":"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","sourcesContent":["import { el } from '@webtaku/el';\nimport { watchAccount, getAccount } from 'wagmi/actions'; // ⬅ getAccount 추가\nimport { fetchHeldNfts, type HeldNft } from '../api/nfts';\nimport { wagmiConfig } from '../components/wallet';\nimport './my-items.css';\n\nexport class MyItems {\n  root: HTMLElement;\n  private grid: HTMLElement;\n  private stateBar: HTMLElement;\n  private holder: string | null = null;\n  private unwatch?: () => void;\n  private reqToken = 0; // 경쟁 상태 방지용 토큰\n\n  constructor() {\n    const title = el('h2.page-title', '내 NFT');\n    const subtitle = el('p.page-subtitle', '지갑이 보유한 NFT 목록입니다.');\n    this.stateBar = el('div.state-bar');\n    this.grid = el('div.items-grid');\n    this.root = el('section.my-items', title, subtitle, this.stateBar, this.grid);\n\n    // 1) 초기 동기화\n    const { address } = getAccount(wagmiConfig) ?? {};\n    this.setHolder(address ?? null);\n\n    // 2) 구독 설정 (언마운트에서 해제)\n    this.unwatch = watchAccount(wagmiConfig, {\n      onChange: (account) => this.setHolder(account.address ?? null)\n    });\n  }\n\n  destroy() {\n    this.unwatch?.();\n    this.unwatch = undefined;\n  }\n\n  setHolder(addr: string | null) {\n    this.holder = addr;\n    this.grid.replaceChildren();\n    this.stateBar.replaceChildren();\n    if (!this.holder) {\n      this.showEmptyWalletHint();\n      return;\n    }\n    this.load();\n  }\n\n  private async load() {\n    if (!this.holder) return;\n    // 3) 경쟁 상태 방지 토큰\n    const myReq = ++this.reqToken;\n\n    this.renderSkeletons(4);\n    try {\n      const items = await fetchHeldNfts(this.holder);\n      if (myReq !== this.reqToken) return; // holder가 바뀌어 이전 응답이면 무시\n\n      if (!items.length) {\n        this.showEmpty();\n        return;\n      }\n      this.renderItems(items);\n    } catch (err) {\n      if (myReq !== this.reqToken) return;\n      this.showError(err);\n    }\n  }\n\n  private renderItems(items: HeldNft[]) {\n    this.stateBar.replaceChildren();\n    const cards = items.map((nft) => this.renderCard(nft));\n    this.grid.replaceChildren(...cards);\n  }\n\n  private renderCard(nft: HeldNft) {\n    return el('sl-card.nft-card',\n      el('img.card-media', {\n        src: nft.image ?? '',\n        alt: `${nft.collection} #${nft.id}`,\n        onerror: (e: any) => e.currentTarget.src = 'fallback.png'\n      }),\n      el('div.card-meta',\n        el('div.name', `${nft.collection ?? 'NFT'} #${nft.id}`),\n      )\n    );\n  }\n\n  private renderSkeletons(n = 8) {\n    this.grid.replaceChildren(...Array.from({ length: n }, () =>\n      el('sl-card', el('sl-skeleton', { effect: 'pulse', style: { width: '100%', height: '200px' } }))\n    ));\n  }\n\n  private showEmptyWalletHint() {\n    this.stateBar.replaceChildren(\n      el('sl-alert', { variant: 'primary', open: true },\n        el('strong', '지갑이 연결되어 있지 않습니다.')\n      )\n    );\n  }\n\n  private showEmpty() {\n    this.stateBar.replaceChildren();\n    this.grid.replaceChildren(\n      el('div.empty',\n        el('h3', '보유한 NFT가 없습니다.'),\n        el('p', '탐색 탭에서 새로운 NFT를 찾아보세요.')\n      )\n    );\n  }\n\n  private showError(err: unknown) {\n    const msg = err instanceof Error ? err.message : String(err);\n    this.stateBar.replaceChildren(\n      el('sl-alert', { variant: 'danger', open: true }, msg)\n    );\n  }\n}\n"]}