{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import '@shoelace-style/shoelace';\nimport Navigo from 'navigo';\nimport { sendNft } from './chain/erc721';\nimport { createRainbowKit } from './components/wallet';\nimport './main.css';\nimport { Explore } from './views/explore';\nimport { History } from './views/history';\nimport { Layout } from './views/layout';\nimport { MyItems } from './views/my-items';\n\nconst BASE_PATH = process.env.NODE_ENV === 'production' ? '/kaia-nft-marketplace/' : '/';\nconst router = new Navigo(BASE_PATH) as Navigo;\n\nconst layout = new Layout(router)\ndocument.body.append(layout.header, layout.contentContainer, layout.drawer, createRainbowKit())\n\nrouter.on('/', () => {\n  const explore = new Explore()\n  layout.mountContent(explore.root)\n})\nrouter.on('/explore', () => {\n  const explore = new Explore()\n  layout.mountContent(explore.root)\n})\n\nrouter.on('/my-items', () => {\n  const myItems = new MyItems()\n  layout.mountContent(myItems.root)\n})\n\nrouter.on('/history', () => {\n  const history = new History()\n  layout.mountContent(history.root)\n})\n\nrouter.resolve();\n\nfunction toast(kind: 'success' | 'danger' | 'primary', msg: string) {\n  const a = document.createElement('sl-alert');\n  a.setAttribute('variant', kind);\n  a.setAttribute('duration', '3000');\n  a.setAttribute('closable', '');\n  a.innerHTML = msg;\n  document.body.appendChild(a);\n  (customElements.whenDefined('sl-alert') as any).then(() => (a as any).toast?.());\n}\n\nwindow.addEventListener('myitems:transfer', async (ev: any) => {\n  const { contract, tokenId, to } = ev.detail;\n  try {\n    toast('primary', '전송을 시작합니다…');\n    const { hash } = await sendNft({\n      contract,\n      to,\n      tokenId: BigInt(tokenId)\n    });\n    toast('success', `전송 성공!<br><small>${hash.slice(0, 10)}…</small>`);\n    // 리스트 새로고침\n    window.dispatchEvent(new CustomEvent('myitems:refresh'));\n  } catch (err: any) {\n    console.error(err);\n    toast('danger', err?.shortMessage || err?.message || '전송 실패');\n  }\n});\n"]}