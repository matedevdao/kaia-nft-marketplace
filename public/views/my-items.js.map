{"version":3,"file":"my-items.js","sourceRoot":"","sources":["../../src/views/my-items.ts"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AACjC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,aAAa,EAAE,yBAAyB,EAAE,MAAM,eAAe,CAAC;AACrH,OAAO,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AACjC,OAAO,EAAE,aAAa,EAAgB,MAAM,aAAa,CAAC;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,gBAAgB,CAAC;AAExB,MAAM,UAAU,GAAG;IACjB;QACE,IAAI,EAAE,UAAU;QAChB,eAAe,EAAE,YAAY;QAC7B,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE;YACN,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE;YACjC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;YAC/B,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;SACrC;QACD,OAAO,EAAE,EAAE;KACZ;CACO,CAAC;AAEX,MAAM,OAAO,OAAO;IAClB,IAAI,CAAc;IACV,IAAI,CAAc;IAClB,QAAQ,CAAc;IACtB,MAAM,GAAyB,IAAI,CAAC;IACpC,OAAO,CAAc;IACrB,QAAQ,GAAG,CAAC,CAAC;IAErB,UAAU;IACF,OAAO,CAAe;IACtB,KAAK,CAAe;IACpB,OAAO,CAAe;IACtB,QAAQ,CAAe;IACvB,OAAO,GAAkE,EAAE,CAAC;IAE5E,cAAc,GAAG,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,MAAM;QAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAEjE;QACE,MAAM,KAAK,GAAG,EAAE,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,EAAE,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9E,oCAAoC;QACpC,OAAO;QACP,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,CAAQ,CAAC;QAC3F,MAAM,aAAa,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC;QACpF,MAAM,SAAS,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,KAAK,CAAC,CAAC;QACjF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EACjD,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,mBAAmB,CAAC,EAClE,IAAI,CAAC,KAAK,EAAE,aAAa,EAAE,SAAS,CACrC,CAAC;QACF,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAI,IAAI,CAAC,OAAe,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAE9D,OAAO;QACP,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAQ,CAAC;QACxH,MAAM,aAAa,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC;QACpF,MAAM,SAAS,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,KAAK,CAAC,CAAC;QACjF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EACjD,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,oBAAoB,CAAC,EACnE,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS,CACxC,CAAC;QACF,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAI,IAAI,CAAC,OAAe,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAE7C,2BAA2B;QAC3B,MAAM,EAAE,OAAO,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,SAAS,CAAE,OAAyB,IAAI,IAAI,CAAC,CAAC;QAEnD,wCAAwC;QACxC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,WAAW,EAAE;YACvC,QAAQ,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAE,OAAO,CAAC,OAAyB,IAAI,IAAI,CAAC;SAClF,CAAC,CAAC;QAEH,yDAAyD;QACzD,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAClE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAC3C,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACrE,CAAC;IAEO,KAAK,CAAC,OAAiE,EAAE,GAAW;QAC1F,MAAM,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;QAC3E,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC5B,cAAc,CAAC,WAAW,CAAC,UAAU,CAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAE,CAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,SAAS,CAAC,IAA0B;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,KAAK,CAAC,IAAI;QAChB,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;QACzB,MAAM,KAAK,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC;YACH,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ;gBAAE,OAAO;YACpC,IAAI,CAAC,KAAK,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ;gBAAE,OAAO;YACpC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAEO,WAAW,CAAC,KAAgB;QAClC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,CAAC;IACtC,CAAC;IAEO,UAAU,CAAC,GAAY;QAC7B,MAAM,QAAQ,GAAG,GAAG,CAAC,aAA8B,CAAC;QAEpD,MAAM,OAAO,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,KAAK,CAAC,CAAC;QAC9E,MAAM,OAAO,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;QAE7F,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACrC,IAAI,CAAC,QAAQ;gBAAE,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAC5D,IAAI,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACrC,IAAI,CAAC,QAAQ;gBAAE,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAC5D,IAAI,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,EAAE,CAAC,kBAAkB,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAEzD,OAAO,EAAE,CAAC,kBAAkB,EAC1B,EAAE,CAAC,gBAAgB,EAAE;YACnB,GAAG,EAAE,GAAG,CAAC,KAAK,IAAI,EAAE;YACpB,GAAG,EAAE,GAAG,GAAG,CAAC,UAAU,IAAI,KAAK,KAAK,GAAG,CAAC,EAAE,EAAE;YAC5C,OAAO,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,cAAc;SAC1D,CAAC,EACF,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,UAAU,IAAI,KAAK,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAC5E,OAAO,CACR,CAAC;IACJ,CAAC;IAEO,cAAc,CAAC,OAAmE;QACxF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,KAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAe,CAAC,IAAI,GAAG,IAAI,CAAC;IACpC,CAAC;IAEO,KAAK,CAAC,WAAW;QACvB,MAAM,EAAE,GAAG,MAAM,CAAE,IAAI,CAAC,KAAa,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAmB,CAAC;QAC3E,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,oBAAoB,CAAC,CAAC,CAAC;YACxG,OAAO;QACT,CAAC;QACD,MAAM,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,EAAE,OAAoC,CAAC;QACzE,IAAI,CAAC,EAAE,EAAE,CAAC;YACR,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,mBAAmB,CAAC,CAAC,CAAC;YACvG,OAAO;QACT,CAAC;QAED,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO;QAExC,IAAI,CAAC,OAAe,CAAC,IAAI,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QAEpC,IAAI,CAAC;YACH,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,gBAAgB,CAAC,WAAW,EAAE;gBACtD,OAAO,EAAE,QAAQ;gBACjB,GAAG,EAAE,UAAU;gBACf,YAAY,EAAE,kBAAkB;gBAChC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC;gBACvB,OAAO,EAAE,EAAE;aACZ,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACvD,MAAM,yBAAyB,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;YAEvD,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAChC,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC3D,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,YAAY,IAAI,GAAG,EAAE,OAAO,IAAI,OAAO,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAEO,cAAc,CAAC,OAAmE;QACxF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACtB,IAAI,CAAC,QAAgB,CAAC,KAAK,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,OAAe,CAAC,IAAI,GAAG,IAAI,CAAC;IACpC,CAAC;IAEO,WAAW;QACjB,MAAM,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAC,QAAgB,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QACnE,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,qBAAqB,CAAC,CAAC,CAAC;YACzG,OAAO;QACT,CAAC;QACD,MAAM,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAe,CAAC,IAAI,GAAG,KAAK,CAAC;QACnC,iCAAiC;QACjC,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAEO,eAAe,CAAC,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAC1D,EAAE,CAAC,SAAS,EACV,EAAE,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,EACnG,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EACtC,EAAE,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAChF,CACF,CACF,CAAC,CAAC;IACL,CAAC;IAEO,mBAAmB;QACzB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAC3B,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAC/C,EAAE,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAClC,CACF,CAAC;IACJ,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,QAAQ,CAAC,eAAe,CAC3B,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAC/C,EAAE,CAAC,QAAQ,EAAE,gBAAgB,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EACxC,wBAAwB,CACzB,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC9B,CAAC;IAEO,SAAS,CAAC,GAAY;QAC5B,MAAM,GAAG,GAAG,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;CACF","sourcesContent":["// src/views/my-items.ts\nimport { el } from '@webtaku/el';\nimport { watchAccount, getAccount, simulateContract, writeContract, waitForTransactionReceipt } from 'wagmi/actions';\nimport { isAddress } from 'viem';\nimport { fetchHeldNfts, type HeldNft } from '../api/nfts';\nimport { wagmiConfig } from '../components/wallet';\nimport './my-items.css';\n\nconst ERC721_ABI = [\n  {\n    type: 'function',\n    stateMutability: 'nonpayable',\n    name: 'safeTransferFrom',\n    inputs: [\n      { name: 'from', type: 'address' },\n      { name: 'to', type: 'address' },\n      { name: 'tokenId', type: 'uint256' }\n    ],\n    outputs: []\n  }\n] as const;\n\nexport class MyItems {\n  root: HTMLElement;\n  private grid: HTMLElement;\n  private stateBar: HTMLElement;\n  private holder: `0x${string}` | null = null;\n  private unwatch?: () => void;\n  private reqToken = 0;\n\n  // dialogs\n  private dlgSend!: HTMLElement;\n  private iptTo!: HTMLElement;\n  private dlgList!: HTMLElement;\n  private iptPrice!: HTMLElement;\n  private pending: { contract?: `0x${string}`; tokenId?: bigint; nft?: HeldNft } = {};\n\n  private refreshHandler = () => { if (this.holder) this.load(); };\n\n  constructor() {\n    const title = el('h2.page-title', '내 NFT');\n    const subtitle = el('p.page-subtitle', '지갑이 보유한 NFT 목록입니다.');\n    this.stateBar = el('div.state-bar');\n    this.grid = el('div.items-grid');\n    this.root = el('section.my-items', title, subtitle, this.stateBar, this.grid);\n\n    // ===== dialogs (once, reuse) =====\n    // Send\n    this.iptTo = el('sl-input', { type: 'text', label: '받는 주소', placeholder: '0x...' }) as any;\n    const btnSendCancel = el('sl-button', { slot: 'footer', variant: 'neutral' }, '취소');\n    const btnSendOk = el('sl-button', { slot: 'footer', variant: 'primary' }, '보내기');\n    this.dlgSend = el('sl-dialog', { label: 'NFT 보내기' },\n      el('div', { style: { marginBottom: '8px' } }, '수신자 지갑 주소를 입력하세요.'),\n      this.iptTo, btnSendCancel, btnSendOk\n    );\n    btnSendCancel.addEventListener('click', () => { (this.dlgSend as any).open = false; });\n    btnSendOk.addEventListener('click', () => this.confirmSend());\n\n    // List\n    this.iptPrice = el('sl-input', { type: 'number', label: '가격 (ETH)', placeholder: '0.01', min: 0, step: 0.0001 }) as any;\n    const btnListCancel = el('sl-button', { slot: 'footer', variant: 'neutral' }, '취소');\n    const btnListOk = el('sl-button', { slot: 'footer', variant: 'primary' }, '리스팅');\n    this.dlgList = el('sl-dialog', { label: 'NFT 리스팅' },\n      el('div', { style: { marginBottom: '8px' } }, '판매 가격(ETH)을 입력하세요.'),\n      this.iptPrice, btnListCancel, btnListOk\n    );\n    btnListCancel.addEventListener('click', () => { (this.dlgList as any).open = false; });\n    btnListOk.addEventListener('click', () => this.confirmList());\n\n    this.root.append(this.dlgSend, this.dlgList);\n\n    // ===== initial sync =====\n    const { address } = getAccount(wagmiConfig) ?? {};\n    this.setHolder((address as `0x${string}`) ?? null);\n\n    // ===== subscribe account changes =====\n    this.unwatch = watchAccount(wagmiConfig, {\n      onChange: (account) => this.setHolder((account.address as `0x${string}`) ?? null)\n    });\n\n    // refresh hook after external actions succeed (optional)\n    window.addEventListener('myitems:refresh', this.refreshHandler);\n  }\n\n  destroy() {\n    this.unwatch?.(); this.unwatch = undefined;\n    window.removeEventListener('myitems:refresh', this.refreshHandler);\n  }\n\n  private toast(variant: 'primary' | 'success' | 'neutral' | 'warning' | 'danger', msg: string) {\n    const a = el('sl-alert', { variant, duration: 3000, closable: true }, msg);\n    document.body.appendChild(a);\n    (customElements.whenDefined('sl-alert') as any).then(() => (a as any).toast?.());\n  }\n\n  setHolder(addr: `0x${string}` | null) {\n    this.holder = addr;\n    this.grid.replaceChildren();\n    this.stateBar.replaceChildren();\n    if (!this.holder) {\n      this.showEmptyWalletHint();\n      return;\n    }\n    this.load();\n  }\n\n  private async load() {\n    if (!this.holder) return;\n    const myReq = ++this.reqToken;\n    this.stateBar.replaceChildren();\n    this.renderSkeletons(6);\n\n    try {\n      const items = await fetchHeldNfts(this.holder);\n      if (myReq !== this.reqToken) return;\n      if (!items.length) return this.showEmpty();\n      this.renderItems(items);\n    } catch (err) {\n      if (myReq !== this.reqToken) return;\n      this.showError(err);\n    }\n  }\n\n  private renderItems(items: HeldNft[]) {\n    this.stateBar.replaceChildren();\n    const cards = items.map((nft) => this.renderCard(nft));\n    this.grid.replaceChildren(...cards);\n  }\n\n  private renderCard(nft: HeldNft) {\n    const contract = nft.contract_addr as `0x${string}`;\n\n    const btnList = el('sl-button', { size: 'small', variant: 'primary' }, '리스팅');\n    const btnSend = el('sl-button', { size: 'small', variant: 'neutral', outline: true }, '보내기');\n\n    btnList.addEventListener('click', () => {\n      if (!contract) return this.showError('컨트랙트 주소를 찾을 수 없습니다.');\n      this.openListDialog({ contract, tokenId: BigInt(nft.id), nft });\n    });\n\n    btnSend.addEventListener('click', () => {\n      if (!contract) return this.showError('컨트랙트 주소를 찾을 수 없습니다.');\n      this.openSendDialog({ contract, tokenId: BigInt(nft.id), nft });\n    });\n\n    const actions = el('div.card-actions', btnList, btnSend);\n\n    return el('sl-card.nft-card',\n      el('img.card-media', {\n        src: nft.image ?? '',\n        alt: `${nft.collection ?? 'NFT'} #${nft.id}`,\n        onerror: (e: any) => e.currentTarget.src = 'fallback.png'\n      }),\n      el('div.card-meta', el('div.name', `${nft.collection ?? 'NFT'} #${nft.id}`)),\n      actions\n    );\n  }\n\n  private openSendDialog(payload: { contract: `0x${string}`; tokenId: bigint; nft: HeldNft }) {\n    this.pending = payload;\n    (this.iptTo as any).value = '';\n    (this.dlgSend as any).open = true;\n  }\n\n  private async confirmSend() {\n    const to = String((this.iptTo as any).value ?? '').trim() as `0x${string}`;\n    if (!to || !isAddress(to)) {\n      this.stateBar.replaceChildren(el('sl-alert', { variant: 'warning', open: true }, '유효한 수신자 주소를 입력하세요.'));\n      return;\n    }\n    const me = getAccount(wagmiConfig)?.address as `0x${string}` | undefined;\n    if (!me) {\n      this.stateBar.replaceChildren(el('sl-alert', { variant: 'warning', open: true }, '지갑이 연결되어 있지 않습니다.'));\n      return;\n    }\n\n    const { contract, tokenId } = this.pending;\n    if (!contract || tokenId == null) return;\n\n    (this.dlgSend as any).open = false;\n    this.toast('primary', '전송을 시작합니다…');\n\n    try {\n      const { request } = await simulateContract(wagmiConfig, {\n        address: contract,\n        abi: ERC721_ABI,\n        functionName: 'safeTransferFrom',\n        args: [me, to, tokenId],\n        account: me\n      });\n\n      const hash = await writeContract(wagmiConfig, request);\n      await waitForTransactionReceipt(wagmiConfig, { hash });\n\n      this.toast('success', '전송 완료!');\n      window.dispatchEvent(new CustomEvent('myitems:refresh'));\n    } catch (err: any) {\n      console.error(err);\n      this.toast('danger', err?.shortMessage || err?.message || '전송 실패');\n    }\n  }\n\n  private openListDialog(payload: { contract: `0x${string}`; tokenId: bigint; nft: HeldNft }) {\n    this.pending = payload;\n    (this.iptPrice as any).value = '';\n    (this.dlgList as any).open = true;\n  }\n\n  private confirmList() {\n    const priceEth = String((this.iptPrice as any).value ?? '').trim();\n    if (!priceEth || Number(priceEth) <= 0) {\n      this.stateBar.replaceChildren(el('sl-alert', { variant: 'warning', open: true }, '유효한 가격(ETH)을 입력하세요.'));\n      return;\n    }\n    const detail = { ...this.pending, priceEth };\n    (this.dlgList as any).open = false;\n    // 상위(메인)에서 marketplace.list() 처리\n    window.dispatchEvent(new CustomEvent('myitems:list', { detail }));\n  }\n\n  private renderSkeletons(n = 8) {\n    this.grid.replaceChildren(...Array.from({ length: n }, () =>\n      el('sl-card',\n        el('sl-skeleton', { effect: 'pulse', style: { width: '100%', height: '200px', display: 'block' } }),\n        el('div', { style: { padding: '10px' } },\n          el('sl-skeleton', { effect: 'sheen', style: { width: '60%', height: '16px' } })\n        )\n      )\n    ));\n  }\n\n  private showEmptyWalletHint() {\n    this.stateBar.replaceChildren(\n      el('sl-alert', { variant: 'primary', open: true },\n        el('strong', '지갑이 연결되어 있지 않습니다.')\n      )\n    );\n  }\n\n  private showEmpty() {\n    this.stateBar.replaceChildren(\n      el('sl-alert', { variant: 'neutral', open: true },\n        el('strong', '보유한 NFT가 없습니다.'), el('br'),\n        '탐색 탭에서 새로운 NFT를 찾아보세요.'\n      )\n    );\n    this.grid.replaceChildren();\n  }\n\n  private showError(err: unknown) {\n    const msg = err instanceof Error ? err.message : String(err);\n    this.stateBar.replaceChildren(el('sl-alert', { variant: 'danger', open: true }, msg));\n  }\n}\n"]}