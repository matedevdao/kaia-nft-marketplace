{"version":3,"file":"wallet.js","sourceRoot":"","sources":["../../src/components/wallet.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAE9C,OAAO,EAAE,aAAa,EAAE,iBAAiB,EAAE,UAAU,EAAE,kBAAkB,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAC3H,OAAO,EAAE,WAAW,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACzE,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AACjC,OAAO,EACL,YAAY,EACZ,IAAI,EACJ,aAAa,EACd,MAAM,OAAO,CAAC;AACf,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AACpC,OAAO,cAAc,CAAC;AAKtB,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;AAEtC,2BAA2B;AAC3B,MAAM,EAAE,UAAU,EAAE,GAAG,iBAAiB,CAAC;IACvC,OAAO,EAAE,QAAQ;IACjB,SAAS,EAAE,yBAAyB;CACrC,CAAC,CAAC;AAEH,MAAM,MAAM,GAAQ,YAAY,CAAC;IAC/B,MAAM,EAAE,CAAC,IAAW,CAAC;IACrB,UAAU,EAAE;QACV,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU;KAC9B;IACD,UAAU;IACV,GAAG,EAAE,KAAK,EAAE,sBAAsB;CACnC,CAAC,CAAC;AAEH,IAAI,sBAAkC,CAAC;AAEvC,SAAS,sBAAsB;IAC7B,MAAM,EAAE,gBAAgB,EAAE,GAAG,eAAe,EAAE,CAAC;IAE/C,SAAS,CAAC,GAAG,EAAE;QACb,sBAAsB,GAAG,GAAG,EAAE;YAC5B,IAAI,gBAAgB;gBAAE,gBAAgB,EAAE,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAEvB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,gBAAgB;IACvB,MAAM,SAAS,GAAG,EAAE,EAAE,CAAC;IACvB,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,CAC1B,oBAAC,mBAAmB,IAAC,MAAM,EAAE,WAAW;QACtC,oBAAC,aAAa,IAAC,MAAM,EAAE,MAAM;YAC3B,oBAAC,kBAAkB,IAAC,KAAK,EAAE,UAAU,EAAE;gBACrC,oBAAC,sBAAsB,OAAG,CACP,CACP,CACI,CACvB,CAAC;IACF,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,mBAAmB;IAC1B,MAAM,SAAS,GAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;IACxC,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,CAC1B,oBAAC,mBAAmB,IAAC,MAAM,EAAE,WAAW;QACtC,oBAAC,aAAa,IAAC,MAAM,EAAE,MAAM;YAC3B,oBAAC,kBAAkB,IAAC,KAAK,EAAE,UAAU,EAAE;gBACrC,oBAAC,aAAa,OAAG,CACE,CACP,CACI,CACvB,CAAC;IACF,OAAO,SAAS,CAAC;AACnB,CAAC;AACD,MAAM,YAAY,GAAG,eAAe,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AAEnE,OAAO,EACL,mBAAmB,EAAE,gBAAgB,EACrC,sBAAsB,EAAE,YAAY,EAAE,MAAM,IAAI,WAAW,EAC5D,CAAC","sourcesContent":["import React, { useEffect } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { ConnectButton, getDefaultWallets, lightTheme, RainbowKitProvider, useConnectModal } from '@rainbow-me/rainbowkit';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { getPublicClient } from '@wagmi/core';\nimport { el } from '@webtaku/el';\nimport {\n  createConfig,\n  http,\n  WagmiProvider\n} from 'wagmi';\nimport { kaia } from 'wagmi/chains';\nimport './wallet.css';\n\ndeclare const APP_NAME: string;\ndeclare const WALLET_CONNECT_PROJECT_ID: string;\n\nconst queryClient = new QueryClient();\n\n// wagmi + rainbowkit 최신 설정\nconst { connectors } = getDefaultWallets({\n  appName: APP_NAME,\n  projectId: WALLET_CONNECT_PROJECT_ID,\n});\n\nconst config: any = createConfig({\n  chains: [kaia as any],\n  transports: {\n    [kaia.id]: http(), // RPC를 설정\n  },\n  connectors,\n  ssr: false, // (선택) SSR 사용하지 않을 경우\n});\n\nlet openWalletConnectModal: () => void;\n\nfunction ConnectModalController() {\n  const { openConnectModal } = useConnectModal();\n\n  useEffect(() => {\n    openWalletConnectModal = () => {\n      if (openConnectModal) openConnectModal();\n    };\n  }, [openConnectModal]);\n\n  return null;\n}\n\nfunction createRainbowKit() {\n  const container = el();\n  createRoot(container).render(\n    <QueryClientProvider client={queryClient}>\n      <WagmiProvider config={config}>\n        <RainbowKitProvider theme={lightTheme()}>\n          <ConnectModalController />\n        </RainbowKitProvider>\n      </WagmiProvider>\n    </QueryClientProvider>\n  );\n  return container;\n}\n\nfunction createConnectButton() {\n  const container = el('.connect-button');\n  createRoot(container).render(\n    <QueryClientProvider client={queryClient}>\n      <WagmiProvider config={config}>\n        <RainbowKitProvider theme={lightTheme()}>\n          <ConnectButton />\n        </RainbowKitProvider>\n      </WagmiProvider>\n    </QueryClientProvider>\n  );\n  return container;\n}\nconst publicClient = getPublicClient(config, { chainId: kaia.id });\n\nexport {\n  createConnectButton, createRainbowKit,\n  openWalletConnectModal, publicClient, config as wagmiConfig\n};\n\n"]}